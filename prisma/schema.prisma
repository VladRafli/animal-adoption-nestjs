// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id                  String                @id @unique @db.Char(40)
  email               String                @unique @db.VarChar(100)
  password            String                @db.VarChar(255)
  profilePicture      String?               @db.Text
  role                String                @db.VarChar(50)
  name                String                @db.VarChar(100)
  number              String?               @db.VarChar(50)
  address             String?               @db.VarChar(255)
  createdAt           DateTime              @default(now()) @db.DateTime
  updatedAt           DateTime              @updatedAt @db.DateTime
  deletedAt           DateTime?             @db.DateTime
  animal              Animal[]
  refreshToken        RefreshToken?
  adoptionTransaction AdoptionTransaction[]
  resetPasswordToken  ResetPasswordToken[]
  fromChatRoom        ChatRoom[]            @relation(name: "from")
  toChatRoom          ChatRoom[]            @relation(name: "to")
  chatSender          Chat[]                @relation(name: "sender")
  chatReciever        Chat[]                @relation(name: "reciever")
}

model RefreshToken {
  id        String    @id @db.Char(40)
  token     String    @db.VarChar(500)
  revokedAt DateTime? @db.DateTime
  expiredAt DateTime  @db.DateTime
  createdAt DateTime  @default(now()) @db.DateTime
  updatedAt DateTime  @updatedAt @db.DateTime
  deletedAt DateTime? @db.DateTime
  user      User      @relation(fields: [id], references: [id], onUpdate: Cascade, onDelete: NoAction)
}

model ResetPasswordToken {
  id        String    @id @db.Char(40)
  token     String    @db.VarChar(500)
  revokedAt DateTime? @db.DateTime
  expiredAt DateTime  @db.DateTime
  createdAt DateTime  @default(now()) @db.DateTime
  updatedAt DateTime  @updatedAt @db.DateTime
  deletedAt DateTime? @db.DateTime
  user      User      @relation(fields: [id], references: [id], onUpdate: Cascade, onDelete: NoAction)
}

model AnimalType {
  id        String    @id @unique @db.Char(40)
  name      String    @db.VarChar(100)
  createdAt DateTime  @default(now()) @db.DateTime
  updatedAt DateTime  @updatedAt @db.DateTime
  deletedAt DateTime? @db.DateTime
  animal    Animal[]
}

model Animal {
  id                  String                @id @unique @db.Char(40)
  userId              String                @db.Char(40)
  animalTypeId        String                @db.Char(40)
  name                String                @db.VarChar(100)
  age                 Int                   @db.UnsignedTinyInt
  gender              AnimalGender
  breed               String                @db.VarChar(100)
  description         String?               @db.VarChar(255)
  createdAt           DateTime              @default(now()) @db.DateTime
  updatedAt           DateTime              @updatedAt @db.DateTime
  deletedAt           DateTime?             @db.DateTime
  user                User                  @relation(fields: [userId], references: [id], onUpdate: Cascade, onDelete: NoAction)
  animalType          AnimalType            @relation(fields: [animalTypeId], references: [id], onUpdate: Cascade, onDelete: NoAction)
  animalPhoto         AnimalPhoto[]
  adoptionTransaction AdoptionTransaction[]
  animalCertificate   AnimalCertificate[]
}

model AnimalPhoto {
  id        String    @id @unique @db.Char(40)
  animalId  String    @db.Char(40)
  type      String    @db.VarChar(50)
  path      String    @db.Text
  createdAt DateTime  @default(now()) @db.DateTime
  updatedAt DateTime  @updatedAt @db.DateTime
  deletedAt DateTime? @db.DateTime
  animal    Animal    @relation(fields: [animalId], references: [id], onUpdate: Cascade, onDelete: NoAction)
}

model AnimalCertificate {
  id          String    @id @unique @db.Char(40)
  animalId    String    @db.Char(40)
  type        String    @db.VarChar(50)
  description String    @db.VarChar(255)
  path        String    @db.Text
  createdAt   DateTime  @default(now()) @db.DateTime
  updatedAt   DateTime  @updatedAt @db.DateTime
  deletedAt   DateTime? @db.DateTime
  animal      Animal    @relation(fields: [animalId], references: [id], onUpdate: Cascade, onDelete: NoAction)
}

model ChatRoom {
  id        String    @id @unique @db.Char(40)
  fromId    String    @db.Char(40)
  toId      String    @db.Char(40)
  createdAt DateTime  @default(now()) @db.DateTime
  updatedAt DateTime  @updatedAt @db.DateTime
  deletedAt DateTime? @db.DateTime
  from      User      @relation(name: "from", fields: [fromId], references: [id], onUpdate: Cascade, onDelete: NoAction)
  to        User      @relation(name: "to", fields: [toId], references: [id], onUpdate: Cascade, onDelete: NoAction)
  chat      Chat[]
}

model Chat {
  id         String    @id @unique @db.Char(40)
  chatRoomId String    @db.Char(40)
  senderId   String    @db.Char(40)
  receiverId String    @db.Char(40)
  message    String    @db.VarChar(255)
  createdAt  DateTime  @default(now()) @db.DateTime
  updatedAt  DateTime  @updatedAt @db.DateTime
  deletedAt  DateTime? @db.DateTime
  chatRoom   ChatRoom  @relation(fields: [chatRoomId], references: [id], onUpdate: Cascade, onDelete: NoAction)
  sender     User      @relation(name: "sender", fields: [senderId], references: [id], onUpdate: Cascade, onDelete: NoAction)
  receiver   User      @relation(name: "reciever", fields: [receiverId], references: [id], onUpdate: Cascade, onDelete: NoAction)
}

model AdoptionTransaction {
  id        String    @id @unique @db.Char(40)
  userId    String    @db.Char(40)
  animalId  String    @db.Char(40)
  status    String    @db.VarChar(50)
  createdAt DateTime  @default(now()) @db.DateTime
  updatedAt DateTime  @updatedAt @db.DateTime
  deletedAt DateTime? @db.DateTime
  user      User      @relation(fields: [userId], references: [id], onUpdate: Cascade, onDelete: NoAction)
  animal    Animal    @relation(fields: [animalId], references: [id], onUpdate: Cascade, onDelete: NoAction)
}

model ApplicationStatistics {
  id                   Int                @id @unique @default(autoincrement()) @db.Int
  userStatisticsId     Int                @db.Int
  animalStatisticsId   Int                @db.Int
  adoptionStatisticsId Int                @db.Int
  createdAt            DateTime           @default(now()) @db.DateTime
  updatedAt            DateTime           @updatedAt @db.DateTime
  deletedAt            DateTime?          @db.DateTime
  userStatistics       UserStatistics     @relation(fields: [userStatisticsId], references: [id], onUpdate: Cascade, onDelete: NoAction)
  animalStatistics     AnimalStatistics   @relation(fields: [animalStatisticsId], references: [id], onUpdate: Cascade, onDelete: NoAction)
  adoptionStatistics   AdoptionStatistics @relation(fields: [adoptionStatisticsId], references: [id], onUpdate: Cascade, onDelete: NoAction)
}

model UserStatistics {
  id                    Int                     @id @unique @default(autoincrement()) @db.Int
  totalUser             Int                     @db.Int
  totalAdmin            Int                     @db.Int
  totalAdopter          Int                     @db.Int
  totalShelter          Int                     @db.Int
  createdAt             DateTime                @default(now()) @db.DateTime
  updatedAt             DateTime                @updatedAt @db.DateTime
  deletedAt             DateTime?               @db.DateTime
  applicationStatistics ApplicationStatistics[]
}

model AnimalStatistics {
  id                    Int                     @id @unique @default(autoincrement()) @db.Int
  totalAnimal           Int                     @db.Int
  totalCat              Int                     @db.Int
  totalDog              Int                     @db.Int
  createdAt             DateTime                @default(now()) @db.DateTime
  updatedAt             DateTime                @updatedAt @db.DateTime
  deletedAt             DateTime?               @db.DateTime
  applicationStatistics ApplicationStatistics[]
}

model AdoptionStatistics {
  id                    Int                     @id @unique @default(autoincrement()) @db.Int
  totalAdoption         Int                     @db.Int
  totalCatAdoption      Int                     @db.Int
  totalDogAdoption      Int                     @db.Int
  createdAt             DateTime                @default(now()) @db.DateTime
  updatedAt             DateTime                @updatedAt @db.DateTime
  deletedAt             DateTime?               @db.DateTime
  applicationStatistics ApplicationStatistics[]
}

model ShelterStatistics {
  id                          Int                       @id @unique @default(autoincrement()) @db.Int
  shelterAnimalStatisticsId   Int                       @db.Int
  shelterAdoptionStatisticsId Int                       @db.Int
  createdAt                   DateTime                  @default(now()) @db.DateTime
  updatedAt                   DateTime                  @updatedAt @db.DateTime
  deletedAt                   DateTime?                 @db.DateTime
  shelterAnimalStatistics     ShelterAnimalStatistics   @relation(fields: [shelterAnimalStatisticsId], references: [id], onUpdate: Cascade, onDelete: NoAction)
  shelterAdoptionStatistics   ShelterAdoptionStatistics @relation(fields: [shelterAdoptionStatisticsId], references: [id], onUpdate: Cascade, onDelete: NoAction)
}

model ShelterAnimalStatistics {
  id                Int                 @id @unique @default(autoincrement()) @db.Int
  totalAdoption     Int                 @db.Int
  totalCatAdoption  Int                 @db.Int
  totalDogAdoption  Int                 @db.Int
  createdAt         DateTime            @default(now()) @db.DateTime
  updatedAt         DateTime            @updatedAt @db.DateTime
  deletedAt         DateTime?           @db.DateTime
  shelterStatistics ShelterStatistics[]
}

model ShelterAdoptionStatistics {
  id                Int                 @id @unique @default(autoincrement()) @db.Int
  totalAdoption     Int                 @db.Int
  totalCatAdoption  Int                 @db.Int
  totalDogAdoption  Int                 @db.Int
  createdAt         DateTime            @default(now()) @db.DateTime
  updatedAt         DateTime            @updatedAt @db.DateTime
  deletedAt         DateTime?           @db.DateTime
  shelterStatistics ShelterStatistics[]
}

enum AnimalGender {
  male
  female
}
