// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id             String         @id @unique @db.Char(40)
  email          String         @unique @db.VarChar(100)
  password       String         @db.VarChar(255)
  profilePicture String?        @db.VarChar(255)
  role           String         @db.VarChar(50)
  name           String         @db.VarChar(100)
  number         String?        @db.VarChar(50)
  address        String?        @db.VarChar(255)
  createdAt      DateTime       @default(now()) @db.DateTime
  updatedAt      DateTime       @updatedAt @db.DateTime
  deletedAt      DateTime?      @db.DateTime
  animal         Animal[]
  RefreshToken   RefreshToken?
}

model RefreshToken {
  id        String    @id @db.Char(40)
  token     String    @db.VarChar(500)
  revokedAt DateTime? @db.DateTime
  expiredAt DateTime  @db.DateTime
  createdAt DateTime  @default(now()) @db.DateTime
  updatedAt DateTime  @updatedAt @db.DateTime
  deletedAt DateTime? @db.DateTime
  user      User      @relation(fields: [id], references: [id], onUpdate: Cascade, onDelete: NoAction)
}

model AnimalType {
  id        String    @id @unique @db.Char(40)
  name      String    @db.VarChar(100)
  createdAt DateTime  @default(now()) @db.DateTime
  updatedAt DateTime  @updatedAt @db.DateTime
  deletedAt DateTime? @db.DateTime
  animal    Animal[]
}

model Animal {
  id           String        @id @unique @db.Char(40)
  userId       String        @db.Char(40)
  animalTypeId String        @db.Char(40)
  name         String        @db.VarChar(100)
  age          Int           @db.UnsignedTinyInt
  gender       AnimalGender
  breed        String        @db.VarChar(100)
  description  String?       @db.VarChar(255)
  createdAt    DateTime      @default(now()) @db.DateTime
  updatedAt    DateTime      @updatedAt @db.DateTime
  deletedAt    DateTime?     @db.DateTime
  user         User          @relation(fields: [userId], references: [id], onUpdate: Cascade, onDelete: NoAction)
  animalType   AnimalType    @relation(fields: [animalTypeId], references: [id], onUpdate: Cascade, onDelete: NoAction)
  animalPhoto  AnimalPhoto[]
}

model AnimalPhoto {
  id        String    @id @unique @db.Char(40)
  animalId  String    @db.Char(40)
  type      String    @db.VarChar(50)
  size      Int       @db.UnsignedInt
  extension String    @db.VarChar(100)
  path      String    @db.VarChar(255)
  createdAt DateTime  @default(now()) @db.DateTime
  updatedAt DateTime  @updatedAt @db.DateTime
  deletedAt DateTime? @db.DateTime
  animal    Animal    @relation(fields: [animalId], references: [id], onUpdate: Cascade, onDelete: NoAction)
}

enum AnimalGender {
  male
  female
}
